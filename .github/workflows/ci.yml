name: build

on:
  push:
    branches: [ 'main' ]
  pull_request:

# one running workflow per branch, others will wait
concurrency: ${{ github.ref }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: pre-commit/action@v3.0.0

  mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12.x' ]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        id: python
      - name: Restore python cache
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: python-${{ env.pythonLocation }}-${{ hashFiles('requirements*.txt') }}
      - name: Restore mypy cache
        uses: actions/cache@v3
        with:
          path: .mypy_cache
          key: mypy-${{ hashFiles('requirements*.txt') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Run mypy
        run: make mypy

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12.x' ]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        id: python

      - name: Restore python cache
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: python-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('requirements*.txt') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Run tests
        run: make test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
